激活码：583629
天翼：https://cloud.189.cn/t/UbENfyJ7NJna
百度：https://pan.baidu.com/s/1sUkZGE0-8DUy9hxd8QD67Q 
提取码：jza2
#include <iostream>
using namespace std;
/**********   Begin   **********/
int runnian(int year)
{
	if((year%4==0&&year%100!=0)||year%400==0)
		return 1;
	return 0;
}
//可以在此增加其他函数

void ToDate(int n)
{
	int a[2][12]={
		{31,28,31,30,31,30,31,31,30,31,30,31},
		{31,29,31,30,31,30,31,31,30,31,30,31}
	};
	int i=0;
	int year=2000,month=1,day=1;
	while((n-a[runnian(year)][i])>0)
	{
		n=n-a[runnian(year)][i];
		month++;
		if(month>12)
		{
			month=1;
			year++;
			i=0;
		}
		i++;
	}
	day=day+n;
	printf("%d-%d-%d",year,month,day);
}

/**********   End   **********/
#include <stdio.h>
#define M 10
#define N 10
void Transpose(int (*a)[N], int (*at)[M], int m, int n);
void InputMatrix(int (*a)[N], int m, int n);
void PrintMatrix(int (*at)[M], int n, int m);
int main()
{	   		 	   
    int s[M][N], st[N][M], m, n;
    printf("Input m, n:");
    scanf("%d,%d", &m, &n);
    InputMatrix(s, m, n);
    Transpose(s, st, m, n);
    printf("The transposed matrix is:\n");
    PrintMatrix(st, n,  m);
    return 0;
}	   		 	   
/* 函数功能：计算m*n矩阵a的转置矩阵at */
void Transpose(int (*a)[N], int (*at)[M], int m, int n)
{	   		 	   
    int i, j;
    for (i = 0; i < m; i++)
    {	   		 	   
        for (j = 0; j < n; j++)
        {	   		 	   
            *(*(at + j) + i) = *(*(a + i) + j);
        }
    }
}	   		 	   
/* 函数功能：输入m*n矩阵a的值 */
void InputMatrix(int (*a)[N], int m, int n)
{	   		 	   
    int i, j;
    printf("Input %d*%d matrix:\n", m, n);
    for (i = 0; i < m; i++)
    {	   		 	   
        for (j = 0; j < n; j++)
        {	   		 	   
            scanf("%d", *(a + i) + j);
        }
    }
}	   		 	   
/* 函数功能：输出n*m矩阵at的值 */
void PrintMatrix(int (*at)[M], int n, int m)
{	   		 	   
    int i, j;
    for (i = 0; i < n; i++)
    {	   		 	   
        for (j = 0; j < m; j++)
        {	   		 	   
            printf("%d\t", *(*(at + i) + j));
        }
        printf("\n");
    }
}	


#include <stdio.h>
#define N 10
void Transpose(int a[][N],int n);
void swap(int *x,int *y);
int main()
{
   int n;
   int i,j;
   int arr[N][N];
   scanf("%d",&n);
   for(i=0;i<n;i++)
   {
       for(j=0;j<n;j++)
           scanf("%d",&arr[i][j]);
   }
   Transpose(arr,n);
   for(i=0;i<n;i++)
   {
       for(j=0;j<n;j++)
            printf("%d ",arr[i][j]);
       printf("\n");
   }
    return 0;
}
void swap(int *x,int *y)
{
    int temp;
    temp=*x;
    *x=*y;
    *y=temp;
}
void Transpose(int a[][N],int n)
{
    int i,j;
    for(i=0;i<n;i++)
    {
        for(j=0;j<=i;j++)
            swap(&a[i][j],&a[j][i]);
    }
}


#include <stdio.h>
#define N 10
void Transpose(int (*a)[N],int n);
void swap(int *x,int *y);
int main()
{
   int n;
   int i,j;
   int arr[N][N];
   scanf("%d",&n);
   for(i=0;i<n;i++)
   {
       for(j=0;j<n;j++)
           scanf("%d",&arr[i][j]);
   }
   Transpose(&arr[0],n);
   for(i=0;i<n;i++)
   {
       for(j=0;j<n;j++)
            printf("%d ",arr[i][j]);
       printf("\n");
   }
    return 0;
}
void swap(int *x,int *y)
{
    int temp;
    temp=*x;
    *x=*y;
    *y=temp;
}
void Transpose(int (*a)[N],int n)
{
    int i,j;
    for(i=0;i<n;i++)
    {
        for(j=0;j<=i;j++)
            swap(a[i]+j,a[j]+i);
    }
}


#include <stdio.h>
#define N 10
void Transpose(int *a,int n);
void swap(int *x,int *y);
int main()
{
   int n;
   int i,j;
   int arr[N][N];
   scanf("%d",&n);
   for(i=0;i<n;i++)
   {
       for(j=0;j<n;j++)
           scanf("%d",&arr[i][j]);
   }
   Transpose(arr[0],n);
   for(i=0;i<n;i++)
   {
       for(j=0;j<n;j++)
            printf("%d ",arr[i][j]);
       printf("\n");
   }
    return 0;
}
void swap(int *x,int *y)
{
    int temp;
    temp=*x;
    *x=*y;
    *y=temp;
}
void Transpose(int *a,int n)
{
    int i,j;
    for(i=0;i<n;i++)
    {
        for(j=0;j<=i;j++)
            swap(a+i*n+j,a+j*n+i);
    }
}
 
   int i,j;
    for(i=0;i<n;i++)
    {
        for(j=0;j<=i;j++)
            swap(a+i*n+j,a+j*n+i);
    }  	

#include <stdio.h>
#define N 10
#define M 10
void Transpose(int (*a)[N],int (*at)[M],int m,int n);

int main()
{
    int a[M][N],at[N][M];
    int m,n,i,j;
    scanf("%d %d",&m,&n);
    for(i=0;i<m;i++)
   {
       for(j=0;j<n;j++)
           scanf("%d",&a[i][j]);
   }
   Transpose(a,at,m,n);
    for(i=0;i<n;i++)
   {
       for(j=0;j<m;j++)
            printf("%d ",at[i][j]);
       printf("\n");
   }
    return 0;
}

void Transpose(int (*a)[N],int (*at)[M],int m,int n)
{
       int i,j;
    for(i=0;i<m;i++)
    {
        for(j=0;j<=n;j++)
            *(*(at+j)+i)=a[i][j];
    }
}

 	   下表是国家和它们的首都：	
Australia Canberra
Belgium	Brussels
China	Beijing
Denmark	Copenhagen
England	London
France	Paris
Greece	Athens
Ireland	Dublin
Scotland Edinburgh
Wales	Cardiff
写一个程序输入一个国家的国家名，输出该国的首都名。

**提示信息："请输入国家名："
**输出格式要求："%s的首都为%s！"  "你输入的国家%s没有找到它的首都！"
#include<stdio.h>
#define N 30
#define MAX 20
int main()
{
    char country[N][MAX]={"Australia","Belgium","China","Denmark","England","","","","",""
    return 0;
}

